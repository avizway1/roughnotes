GIT  : VCS (Distributed version control System)

Developer --> Laptop 

1970 - SCCM : Source Code control system : 1 file
		Revision control System / RCM : x files, 1 directory
		CVS (Cuncurrent version System) : x files, x directory, 1 user

2000 - SVN : Subversions				: x files, x directories, x users
2004 - GIT : Global information tracker 


Advantages : 
--> Distributed in Nature : 
--> Branching and Merging 
--> Performacne 


----


dnf install git -y 		# LinuxOS

git-scm.com/downalods 		--> download the git and install, then open ternal


git config --global user.name "avizway"
git config --global user.email "avizway@gmail.com"
git config --list
git config --global --edit
git config --global core.editor "vim"

git init		--> Initialise a local repo

git add .		
git commit -m "commit message"


Repository / Repo : A repo is a storage location where our project files stores. (in our laptop / remote machine / git repo)

clone : making a local copy on your laptop, of a remote repo. If repo is public, No authentication required.

Push : Sending your commited changes from your local repo to a remote repo. Sending your local changes to remote repo.

pull : Your local repo will be updated with latest code from the remote repo. (fetch the chnages only and updates the local code)


Create a Githib account.. 

=========================


cd ~
ls -a
cd .ssh

ssh-keygen -t ed25519 -C "email@gmail.com"

cat id_ed25519.pub		--> Copy the content and create a new ssh key in github account settings and paste it.

ssh -T git@github.com	--> Run this command to verify the connectivity.

Now onwords, use ssh method to clone the repo. 

===

git remote add origin git@github.com:avizway1/roughnotes.git
git push -u origin master


===

git status
git log
git log --oneline
git log --oneline --author="username"
git show "commit-id"
git diff commit-id1..commitid2


git config --global diff.tool vscode
git config --global difftool.prompt false

====


echo "# awar04" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:avizway1/awar04.git
git push -u origin main

---

You can see branch only after the first commit.

--

Swiggy : Food Delivery


FD --> main --> Code --> FD -->  FD & IM
		|				   |
		|--> Instamart --> |


Main : 3 Files --> Switched to IM --> 



Instamart : grocery
DineOut : Eat out
Scenes : events

---

git branch instamart 		--> Create a Branch 
git checkout instamart 		--> Switch to instamart branch

git checkout -b instamart	--> create a branch and checkout to the new branch

main (7 Files) --> dineout (3 files) 



Main (7 files) --> dineout 3 files

main <-- dineout


===


stash : you can store your chnages in stash without commiting it. 

How to test it :

echo "test content" >> code.txt
git add . && git commit -m "added info in coee.txt"

--

vim code.txt 		(unfinished work)

--> git stash

---

git stash apply 		--> Apply stash changes

--

git stash list			--> shows the stashed list
git stash show -p 		--> shows the content
git stash pop			--> apply the stash & remove the stash

---





















